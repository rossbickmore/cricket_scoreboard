{"version":3,"sources":["components/Score.js","components/Stats.js","components/Settings.js","App.js","serviceWorker.js","index.js"],"names":["Score","props","className","this","data","homeBalls","homeRuns","homeWickets","Math","floor","battingTeam","awayBalls","awayRuns","awayWickets","Component","Stats","runsPerWicket","Wickets","runsPerOver","round","bind","Settings","state","overs","battingFirst","for","id","defaultValue","type","min","max","name","value","App","zero","one","two","three","four","six","wicket","toggleBatting","homeInnings","awayInnings","console","log","setState","onClick","toUpperCase","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de74e304.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Score extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    \n   \n    render() {\n        return (\n            <div className=\"mid-container\">\n                 <div className=\"home-container\">\n                    <h3>Home team</h3>\n                    <div className=\"score-container\">\n                    {\n                        this.props.data.homeBalls === 0 ? (\n                            <h1>Yet to bat</h1>\n                        ) : (\n                            <div>\n                            <h1>{this.props.data.homeRuns} - {this.props.data.homeWickets} wickets </h1>\n                            <h3>{Math.floor(this.props.data.homeBalls/6)}.{this.props.data.homeBalls - Math.floor(this.props.data.homeBalls/6)*6} overs</h3>\n                            </div>\n                        )\n                    }\n                    { \n                        this.props.data.battingTeam === \"home\" ? (\n                            <h4>Home team is batting</h4>\n                        ) : (\n                            <h4>Home team is bowling</h4>\n                        )\n                    }\n                    </div>\n                 </div>\n                 <div className=\"away-container\">\n                    <h3>Away team</h3>\n                    <div className=\"score-container\">\n                    {\n                        this.props.data.awayBalls === 0 ? (\n                            <h1>Yet to bat</h1>\n                        ) : (\n                            <div>\n                            <h1>{this.props.data.awayRuns} - {this.props.data.awayWickets} wickets </h1>\n                            <h3>{Math.floor(this.props.data.awayBalls/6)}.{this.props.data.awayBalls - Math.floor(this.props.data.awayBalls/6)*6} overs</h3>\n                            </div>\n                        )\n                    }\n                    { \n                        this.props.data.battingTeam === \"home\" ? (\n                            <h4>Away team is bowling</h4>\n                        ) : (\n                            <h4>Away team is batting</h4>\n                        )\n                    }\n                    </div>\n                 </div>\n            </div>\n           \n        )\n    }\n    \n}\n\nexport default Score","import React, {Component} from 'react';\n\n\nclass Stats extends Component {\n    constructor(props) {\n        super(props);\n        this.runsPerWicket = this.runsPerWicket.bind(this)\n        this.runsPerOver = this.runsPerOver.bind(this)\n    }\n\n    runsPerWicket = () => {\n        if (this.props.data.homeWickets == 0 || this.props.data.Wickets == 0) return \"-\"\n        if (this.props.data.battingTeam === \"home\") {\n            return (this.props.data.homeRuns / this.props.data.homeWickets)\n          } else {\n            return (this.props.data.awayRuns /  this.props.data.awayWickets)\n          }\n    }\n\n    runsPerOver = () => {\n        if (this.props.data.homeBalls == 0 || this.props.data.awayBalls ) return \"-\"\n        if (this.props.data.battingTeam === \"home\") {\n            return Math.round(this.props.data.homeRuns / (this.props.data.homeBalls/6)*100)/100\n          } else {\n            return this.props.data.awayRuns / (this.props.data.awayBalls - Math.floor(this.props.data.awayBalls/6)*6)\n          }\n    }\n\n\n    render() {\n        return (\n            <div className=\"stats-container\">\n                <p>Runs per wicket: {this.runsPerWicket()}</p>\n                <p>Runs per over: {this.runsPerOver()}</p>\n            </div>\n        )\n    }\n    \n}\n\nexport default Stats","import React, {Component} from 'react';\n\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            overs: 0,\n            battingFirst: \"home\"\n        }\n    }\n    render() {\n        return (\n            <div className=\"settings-container\">\n                <h2>Enter the game conditions</h2>\n                <form >\n                    <div>\n                    <label for=\"overs\">Overs</label>\n                    <input id=\"overs\" defaultValue={this.state.overs} type=\"number\" min=\"20\" max=\"50\"></input>\n                    </div>\n                   <div>\n                   <label for=\"toss\">Team batting first</label>\n                    <select name=\"Team batting first\" id=\"toss\">\n                        <option value=\"home\" id=\"toss\">Home</option>\n                        <option value=\"away\" id=\"toss\">Away</option>\n                    </select>\n                   </div>\n                </form>\n            </div>\n        )\n    }\n    \n}\n\nexport default Settings","import React, {Component} from 'react';\nimport './App.css';\nimport Score from './components/Score'\nimport Stats from './components/Stats'\nimport Settings from './components/Settings'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    //binding functions\n    this.zero = this.zero.bind(this)\n    this.one = this.one.bind(this)\n    this.two = this.two.bind(this)\n    this.three = this.three.bind(this)\n    this.four = this.four.bind(this)\n    this.six = this.six.bind(this)\n    this.wicket = this.wicket.bind(this)\n    this.toggleBatting = this.toggleBatting.bind(this)\n    //set intial state\n    this.state = {\n      battingTeam: \"home\",\n      homeInnings: 0,\n      awayInnings: 0,\n      homeRuns: 0,\n      awayRuns: 0,\n      homeWickets: 0,\n      awayWickets: 0,\n      homeBalls: 0,\n      awayBalls: 0,\n    }\n  }\n  \n  //button functions \n\n  zero() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1\n      })\n    }\n  }\n\n  one() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n        homeRuns: this.state.homeRuns + 1\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1,\n        awayRuns: this.state.awayRuns + 1\n      })\n    }\n  }\n\n  two() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n        homeRuns: this.state.homeRuns + 2\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1,\n        awayRuns: this.state.awayRuns + 2\n      })\n    }\n  }\n\n  three() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n        homeRuns: this.state.homeRuns + 3\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1,\n        awayRuns: this.state.awayRuns + 3\n      })\n    }\n  }\n\n  four() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n        homeRuns: this.state.homeRuns + 4\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1,\n        awayRuns: this.state.awayRuns + 4\n      })\n    }\n  }\n\n  six() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n        homeRuns: this.state.homeRuns + 6\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1,\n        awayRuns: this.state.awayRuns + 6\n      })\n    }\n  }\n\n  wicket() {\n    console.log(this.state.battingTeam)\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        homeBalls: this.state.homeBalls + 1,\n        homeWickets: Math.min(this.state.homeWickets + 1, 10)\n      })\n    } else {\n      this.setState({\n        awayBalls: this.state.awayBalls + 1,\n        awayWickets: Math.min(this.state.awayWickets + 1, 10)\n      })\n    }\n  }\n\n  toggleBatting() {\n    if (this.state.battingTeam === \"home\") {\n      this.setState({\n        battingTeam: \"away\"\n      })\n    } else {\n      this.setState({\n        battingTeam: \"home\"\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"top-container\">\n          <Settings data={this.state}/>\n          <Stats data={this.state}/>\n        </div>\n        <Score data={this.state}/>\n        <div className=\"bottom-container\">\n          <div className=\"controls-container\">\n            <div className=\"label\">\n              <p>Control Panel</p>\n            </div>\n            <button className={ this.state.battingTeam === \"home\" ? \"batting-button-home\" : \"batting-button-away\"} onClick={this.toggleBatting}>Team batting {this.state.battingTeam.toUpperCase()}</button>\n            <button className=\"number-button\" onClick={this.zero}>0</button>\n            <button className=\"number-button\" onClick={this.one}>1</button>\n            <button className=\"number-button\"  onClick={this.two}>2</button>\n            <button className=\"number-button\" onClick={this.three}>3</button>\n            <button className=\"number-button\" onClick={this.four}>4</button>\n            <button className=\"number-button\" onClick={this.six}>6</button>\n            <button className=\"wicket-button\" onClick={this.wicket}>WICKET</button>\n          </div>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}